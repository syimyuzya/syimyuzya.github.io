/*
 * 法師娘自造音系（緋索卡版二）
 *
 * 用於綾香的[切韻音系自動推導器](https://nk2028.shn.hk/qieyun-autoderiver/)
 *
 * 此為規則推導音，音系尚有諸多例外（以及文白讀、口語字、多音字取音等），本腳本並未考慮。
 *
 * - TODO 聲調標示
 */

// 重建對象，因為可能需要修改
音韻地位 = Qieyun.get音韻地位(小韻號);

const is = (x) => 音韻地位.屬於(x);

// --------

// 音系調整
// 脣音一等開合（細則1）
if (is('幫組 一等')) {
  if (is('桓韻')) {
    音韻地位.開合 = '開';
    音韻地位.韻賅上去入 = '寒';
  }
  if (is('戈韻')) {
    音韻地位.開合 = '開';
    音韻地位.韻賅上去入 = '歌';
  }
  if (is('咍韻')) {
    音韻地位.開合 = '合';
    音韻地位.韻賅上去入 = '灰';
  }
  if (is('泰韻')) {
    音韻地位.開合 = '合';
  }
}
// 明母尤東韻（細則2）
if (is('明母 三等')) {
  if (is('東韻')) {
    音韻地位.等 = '一';
  }
  if (is('鍾韻')) {
    音韻地位.等 = '一';
    音韻地位.韻賅上去入 = '冬';
  }
  if (is('尤韻')) {
    音韻地位.等 = '一';
    音韻地位.韻賅上去入 = '侯';
  }
}
// 歌韻開合（細則3）
if (is('歌韻 一等 端精組')) {
  音韻地位.韻賅上去入 = '戈';
  音韻地位.開合 = '合';
}
// XXX 其他類隔？

// --------

// 聲母

function 聲母規則() {
  const lookup = [
    // b p f
    ['幫滂並母 三等 合口 或 幫滂並母 三等 東鍾尤韻', 'f'],
    ['滂母 或 並母 平聲', 'p'],
    ['幫並母', 'b'],
    // v m
    ['明母 三等 合口', 'v'],
    ['明母', 'm'],
    // d t dy ty
    ['透母 或 定母 平聲', 't'],
    ['端定母', 'd'],
    ['徹母 或 澄母 平聲', 'ty'],
    ['知澄母', 'dy'],
    // n l
    ['泥孃母', 'n'],
    ['來母', 'l'],
    // tz ts s
    ['清母 或 從母 平聲', 'ts'],
    ['精從母', 'tz'],
    ['心邪母', 's'],
    // jh ch sh rh
    ['初昌母 或 崇母 平聲', 'ch'],
    ['莊章崇母', 'jh'],
    ['生俟書常船母', 'sh'],
    ['日母', 'rh'],
    // g k h ng
    ['溪母 或 羣母 平聲', 'k'],
    ['見羣母', 'g'],
    ['曉匣母', 'h'],
    ['疑母', 'ng'],
    // -
    ['影云以母', ''],
  ];
  for (const item of lookup) {
    if (is(item[0])) {
      return item[1];
    }
  }
  throw new Error(`無聲母規則: ${音韻地位.音韻描述}`);
}

// --------

// 韻母

function 通則() {
  if (is輕脣) {
    return ['', 轉 === '外' ? 'a' : 'u'];
  }
  const lookup = {
    外洪: ['/a', 'u/a'],
    外細: ['/e', '/oe'],
    內洪: ['/ë', '/o'],
    內細: ['/i', '/ü'],
  };
  const key = 轉 + 洪細;
  if (!lookup.hasOwnProperty(key)) {
    throw new Error(
      `無通則: ${音韻地位.音韻描述} ${轉}轉 ${洪細}音 ${is輕脣 ? '輕脣' : ''}`
    );
  }
  let [介, 元] = lookup[key][is('開口') ? 0 : 1].split('/');
  if (轉 === '外' && is('二等 開口') && is('見組 或 影曉匣母')) {
    介 = 'i';
  }
  return [介, 元];
}

function 韻尾規則() {
  const lookup = [
    ['遇果假攝', '', null],
    ['通江宕梗曾攝', 'ng', 'k'],
    ['止蟹攝', 'i', null],
    ['臻山攝', 'n', 't'],
    ['效流攝', 'u', null],
    ['深咸攝', 'm', 'p'],
  ];
  let res;
  for (const item of lookup) {
    if (is(item[0])) {
      res = is('入聲') ? item[2] : item[1];
    }
  }
  if (res === null) {
    throw new Error(`無韻尾規則: ${音韻地位.音韻描述}`);
  }
  return res;
}

const is輕脣 = is('幫組 三等 合口 或 幫滂並母 三等 東鍾尤韻');
const 洪細 = is輕脣 || is('一二等 或 莊組') ? '洪' : '細';
const 轉 = is('江蟹山效果假宕梗咸攝 或 元韻') ? '外' : '內';

const is脣牙喉 = is('幫見組 或 影曉匣云母');

// 通則

const 母 = 聲母規則();
let [介, 元] = 通則();
let 尾 = 韻尾規則();

// 分則

// 分則 1
if (轉 === '外' && is('一等')) {
  if (尾 === '' || (尾 === 't' && is脣牙喉)) {
    元 = 'ë';
  } else if ((尾 === 'p' && is脣牙喉) || (尾 === 'i' && is('合口'))) {
    介 = '';
    元 = 'o';
  }
}

// 分則 2
if (['u', 'p'].includes(尾)) {
  if (元 === 'e') {
    元 = 'oe';
  } else if (元 === 'ë') {
    元 = 'o';
  } else if (元 === 'i') {
    元 = 'ü';
  }
}

// 分則 3
if (is('果假宕攝') && 洪細 === '細') {
  介 = is('開口') ? 'i' : 'ü';
  元 = 'a';
} else if (is('梗攝') && 洪細 === '洪') {
  介 = is('開口') ? '' : 'u';
  元 = 'ä';
}

// 分則 4
if (is('通遇攝')) {
  if (is('一等')) {
    元 = 'o';
  } else {
    if (is('東虞韻')) {
      介 = '';
      元 = 洪細 === '洪' ? 'u' : 'ü';
    } else {
      介 = 洪細 === '洪' ? '' : 'i';
      元 = 'o';
    }
  }
}

// 細則

// 細則 4
if (is('止攝') && 洪細 === '洪' && (is輕脣 || is('開口'))) {
  元 = 'i';
}

// 細則 5
if (is('曾攝 合口') && 洪細 === '細') {
  介 = 'i';
  元 = 'o';
}

// 細則 6
if (is('流攝') && is輕脣) {
  元 = 'o';
}

// 細則 7
if (is('戈韻 三等 開口')) {
  介 = '';
}

// 細則 8
if (is('陽韻 合口') && !is輕脣) {
  if (母 === '') {
    介 = 'u';
  } else {
    介 = 'i';
    元 = 'ä';
  }
} else if (is('江韻')) {
  if (is('見組 或 影曉匣母')) {
    介 = 'ü';
  } else if (is('知組')) {
    介 = 'u';
  }
}

// 細則 9
if (is('虞韻') && 洪細 === '細') {
  if (is('見組 或 影曉云母 或 來母')) {
    元 = 'u';
  }
}
if (元 === 'u' && 尾 === 'ng') {
  元 = 'o';
}

// 細則 10
if (is('文韻')) {
  元 = 'u';
}

// 細則 11
if (is('佳韻')) {
  介 = is('開口') ? '' : 'u';
  元 = 'ä';
  尾 = '';
} else if (is('廢韻') && !is輕脣) {
  if (is('開口')) {
    介 = 'i';
    元 = 'ä';
  } else {
    介 = '';
    元 = 'o';
  }
}

// 拼合
if (母.endsWith('y') && 介 === 'i') {
  介 = '';
}
if (元 === 'i' && 尾 === 'i') {
  尾 = '';
}

return `${母}${介}${元}${尾}`;
